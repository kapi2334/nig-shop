// <auto-generated />
using System;
using InvoiceService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace invoiceService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517175436_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvoiceService.Models.Invoice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("clientApartmentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("klient_nrmieszkania");

                    b.Property<string>("clientCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("klient_miasto");

                    b.Property<string>("clientCountry")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("klient_kraj");

                    b.Property<int>("clientHouseNumber")
                        .HasColumnType("integer")
                        .HasColumnName("klient_nrdomu");

                    b.Property<long?>("clientNIP")
                        .HasColumnType("bigint")
                        .HasColumnName("klient_nip");

                    b.Property<string>("clientName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("klient_nazwa");

                    b.Property<string>("clientPostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("klient_kodpocztowy");

                    b.Property<string>("clientStreet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("klient_ulica");

                    b.Property<DateTime>("issueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datawystawienia");

                    b.Property<int>("issuerId")
                        .HasColumnType("integer")
                        .HasColumnName("wystawca_id");

                    b.Property<DateTime>("paymentDeadline")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("terminplatnosci");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rodzajplatnosci");

                    b.HasKey("id");

                    b.HasIndex("issuerId");

                    b.ToTable("faktura", (string)null);
                });

            modelBuilder.Entity("InvoiceService.Models.Issuer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("apartmentNumber")
                        .HasColumnType("integer")
                        .HasColumnName("nrmieszkania");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("miasto");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kraj");

                    b.Property<int>("houseNumber")
                        .HasColumnType("integer")
                        .HasColumnName("nrdomu");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nazwa");

                    b.Property<string>("nip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nip");

                    b.Property<string>("postalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kodpocztowy");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ulica");

                    b.HasKey("id");

                    b.ToTable("wystawca", (string)null);
                });

            modelBuilder.Entity("InvoiceService.Models.ProductInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("gross")
                        .HasColumnType("double precision")
                        .HasColumnName("brutto");

                    b.Property<int>("invoiceId")
                        .HasColumnType("integer")
                        .HasColumnName("faktura_id");

                    b.Property<double>("net")
                        .HasColumnType("double precision")
                        .HasColumnName("netto");

                    b.Property<int>("product_id")
                        .HasColumnType("integer")
                        .HasColumnName("produkt_id");

                    b.Property<string>("quantity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ilosc");

                    b.Property<int>("tax")
                        .HasColumnType("integer")
                        .HasColumnName("podatek");

                    b.Property<double>("taxAmount")
                        .HasColumnType("double precision")
                        .HasColumnName("kwotapodatku");

                    b.Property<double>("totalPrice")
                        .HasColumnType("double precision")
                        .HasColumnName("cenaogolem");

                    b.HasKey("id");

                    b.HasIndex("invoiceId");

                    b.ToTable("produktinfo", (string)null);
                });

            modelBuilder.Entity("InvoiceService.Models.Invoice", b =>
                {
                    b.HasOne("InvoiceService.Models.Issuer", "issuer")
                        .WithMany("invoices")
                        .HasForeignKey("issuerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("issuer");
                });

            modelBuilder.Entity("InvoiceService.Models.ProductInfo", b =>
                {
                    b.HasOne("InvoiceService.Models.Invoice", null)
                        .WithMany("products")
                        .HasForeignKey("invoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceService.Models.Invoice", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("InvoiceService.Models.Issuer", b =>
                {
                    b.Navigation("invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
