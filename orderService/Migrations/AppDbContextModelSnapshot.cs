// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderService.Data;

#nullable disable

namespace orderService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("id"));

                    b.Property<int>("clientId")
                        .HasColumnType("integer")
                        .HasColumnName("id_klienta");

                    b.Property<bool>("delivery")
                        .HasColumnType("boolean")
                        .HasColumnName("dostawa");

                    b.Property<int>("orderId")
                        .HasColumnType("integer")
                        .HasColumnName("id_zamowienia");

                    b.HasKey("id");

                    b.ToTable("zamowienie", (string)null);
                });

            modelBuilder.Entity("OrderService.Models.OrderedProducts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("id"));

                    b.Property<int>("orderId")
                        .HasColumnType("integer")
                        .HasColumnName("zamowienie_id");

                    b.Property<int>("productId")
                        .HasColumnType("integer")
                        .HasColumnName("produkt_id");

                    b.Property<int>("quantity")
                        .HasColumnType("integer")
                        .HasColumnName("ilosc");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("zamowienie_produkty", (string)null);
                });

            modelBuilder.Entity("OrderService.Models.OrderedProducts", b =>
                {
                    b.HasOne("OrderService.Models.Order", null)
                        .WithMany("products")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
