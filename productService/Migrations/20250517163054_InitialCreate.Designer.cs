// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductService.Data;

#nullable disable

namespace productService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517163054_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Dimensions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("height")
                        .HasColumnType("double precision")
                        .HasColumnName("wysokosc");

                    b.Property<double>("length")
                        .HasColumnType("double precision")
                        .HasColumnName("dlugosc");

                    b.Property<double>("width")
                        .HasColumnType("double precision")
                        .HasColumnName("szerokosc");

                    b.HasKey("id");

                    b.ToTable("wymiary");
                });

            modelBuilder.Entity("ProductService.Models.Material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nazwa");

                    b.HasKey("id");

                    b.ToTable("material");
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("dimensionsId")
                        .HasColumnType("integer")
                        .HasColumnName("wymiary_id");

                    b.Property<int>("materialId")
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nazwa");

                    b.Property<float>("price")
                        .HasColumnType("real")
                        .HasColumnName("cena");

                    b.Property<int>("surfaceTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("typ_nawierzchni_id");

                    b.Property<int>("tax")
                        .HasColumnType("integer")
                        .HasColumnName("podatek");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rodzaj");

                    b.Property<double>("weight")
                        .HasColumnType("double precision")
                        .HasColumnName("waga");

                    b.HasKey("id");

                    b.HasIndex("dimensionsId");

                    b.HasIndex("materialId");

                    b.HasIndex("surfaceTypeId");

                    b.ToTable("produkt");
                });

            modelBuilder.Entity("ProductService.Models.SurfaceType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nazwa");

                    b.HasKey("id");

                    b.ToTable("typnawierzchni");
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.HasOne("ProductService.Models.Dimensions", "dimensions")
                        .WithMany()
                        .HasForeignKey("dimensionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductService.Models.Material", "material")
                        .WithMany()
                        .HasForeignKey("materialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductService.Models.SurfaceType", "surfaceType")
                        .WithMany()
                        .HasForeignKey("surfaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dimensions");

                    b.Navigation("material");

                    b.Navigation("surfaceType");
                });
#pragma warning restore 612, 618
        }
    }
}
