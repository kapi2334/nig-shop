@inherits LayoutComponentBase

<div style="display: flex; height: 100vh;">
    <div style="width: 20%; border-right: 2px solid black; padding: 10px;">
        <ProductList OnProductSelected="EventCallback.Factory.Create<Product>(this, OnProductSelected)" />
    </div>

    <div style="width: 60%; padding: 10px;">
        <ProductDetail Product="SelectedProduct" OnAddToCart="EventCallback.Factory.Create<Product>(this, AddToCart)" />
    </div>

    <div style="width: 20%; border-left: 2px solid black; padding: 10px;">
        <Cart CartItems="CartItems" OnUpdateQuantity="EventCallback.Factory.Create<(int, int)>(this, UpdateQuantity)" />
    </div>
</div>

@code {
    Product? SelectedProduct;
    List<CartItem> CartItems = new();

    void OnProductSelected(Product product)
    {
        SelectedProduct = product;
    }

    void AddToCart(Product product)
    {
        var existing = CartItems.FirstOrDefault(x => x.Product.Id == product.Id);
        if (existing != null)
            existing.Quantity += 1;
        else
            CartItems.Add(new CartItem { Product = product, Quantity = 1 });
    }

    void UpdateQuantity((int productId, int delta) args)
    {
        var item = CartItems.FirstOrDefault(x => x.Product.Id == args.productId);
        if (item != null)
        {
            item.Quantity += args.delta;
            if (item.Quantity <= 0)
                CartItems.Remove(item);
        }
    }
}