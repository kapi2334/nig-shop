// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserService.Data;

#nullable disable

namespace userService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517160506_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserService.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("buildingNo")
                        .HasColumnType("integer")
                        .HasColumnName("nrdomu");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("miasto");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kraj");

                    b.Property<int?>("localeNo")
                        .HasColumnType("integer")
                        .HasColumnName("nrmieszkania");

                    b.Property<string>("postCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("kodpocztowy");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ulica");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.ToTable("adres");
                });

            modelBuilder.Entity("UserService.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("addressID")
                        .HasColumnType("integer");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imie");

                    b.Property<long?>("nip")
                        .HasColumnType("bigint")
                        .HasColumnName("nip");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("passwordhash");

                    b.Property<string>("surname")
                        .HasColumnType("text")
                        .HasColumnName("nazwisko");

                    b.Property<char>("type")
                        .HasColumnType("character(1)");

                    b.HasKey("id");

                    b.ToTable("podmiot");
                });

            modelBuilder.Entity("UserService.Models.Address", b =>
                {
                    b.HasOne("UserService.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserService.Models.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
